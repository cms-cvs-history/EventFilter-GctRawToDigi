

process gctVmeToDigi = {

//  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  service = MessageLogger {
    untracked vstring destinations = { "debug.log" }
    untracked PSet debug.log = { untracked string threshold = "DEBUG" } 
    untracked vstring debugModules =  { "TextToRaw", "GctRawToDigi"}
  }

  source = EmptySource { }

  untracked PSet maxEvents = { untracked int32 input = 3564 }

  module gctRaw = TextToRaw {
    untracked string filename = "captureMultiTriggers-EcalCounterData.txt"
    untracked int32 GctFedId = 745
  }

  include "EventFilter/GctRawToDigi/data/l1GctHwDigis.cfi"

  module dumpRaw = DumpFEDRawDataProduct { 
    untracked vint32 feds = { 745 }
    untracked bool dumpPayload = true
  }

module dumpGctDigis = L1GctTestAnalyzer {
	untracked InputTag rawInput = l1GctHwDigis
	untracked InputTag emuRctInput = l1RctEmulDigis
	untracked InputTag emuGctInput = l1GctEmulDigis
	untracked string outFile = "gctDigis.txt"
	untracked bool doHardware = true
	untracked bool doEmulated = false
	untracked bool doRctEm = true
	untracked bool doEm = false
	untracked bool doRegions = false
	untracked bool doJets = false
	untracked bool doInternEm = false
	untracked bool doFibres = false
	untracked uint32 rctEmMinRank = 0
}

  path p = { gctRaw, dumpRaw, l1GctHwDigis, dumpGctDigis }

  module outputEvents = PoolOutputModule {
    untracked vstring outputCommands = {
      "drop *",
      "keep *_gctDigis_*_*",
      "keep *_gctRaw_*_*"
    }
    untracked string fileName = "gctDigis.root"
  }

  endpath outpath = { outputEvents }

}
